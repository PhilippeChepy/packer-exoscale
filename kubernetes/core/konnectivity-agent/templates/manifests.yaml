apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: konnectivity-agent
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: system:konnectivity-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:konnectivity-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: konnectivity-agent
  name: konnectivity-agent
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: konnectivity-agent
  template:
    metadata:
      labels:
        k8s-app: konnectivity-agent
        rule.{{ .Values.platform.domain }}/allow-egress-konnectivity-server: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: konnectivity-agent
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --logtostderr=true
        - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - --admin-server-port=8095
        - --health-server-port=8134
        - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token
        - --proxy-server-host={{ .Values.platform.kubernetes.proxyserver.address0
          }}
        command:
        - /proxy-agent
        image: eu.gcr.io/k8s-artifacts-prod/kas-network-proxy/proxy-agent:v0.0.35
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8134
          initialDelaySeconds: 15
          timeoutSeconds: 15
        name: konnectivity-agent-to-server-0
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8134
          initialDelaySeconds: 5
          timeoutSeconds: 15
        resources:
          limits:
            cpu: 50m
            memory: 10Mi
          requests:
            cpu: 50m
            memory: 10Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /var/run/secrets/tokens
          name: konnectivity-agent-token
      - args:
        - --logtostderr=true
        - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - --admin-server-port=8095
        - --health-server-port=8134
        - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token
        - --proxy-server-host={{ .Values.platform.kubernetes.proxyserver.address1
          }}
        command:
        - /proxy-agent
        image: eu.gcr.io/k8s-artifacts-prod/kas-network-proxy/proxy-agent:v0.0.35
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8134
          initialDelaySeconds: 15
          timeoutSeconds: 15
        name: konnectivity-agent-to-server-1
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8134
          initialDelaySeconds: 5
          timeoutSeconds: 15
        resources:
          limits:
            cpu: 50m
            memory: 10Mi
          requests:
            cpu: 50m
            memory: 10Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /var/run/secrets/tokens
          name: konnectivity-agent-token
      priorityClassName: system-cluster-critical
      serviceAccountName: konnectivity-agent
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - name: konnectivity-agent-token
        projected:
          sources:
          - serviceAccountToken:
              audience: system:konnectivity-server
              path: konnectivity-agent-token
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    k8s-app: konnectivity-agent
  name: konnectivity-agent
  namespace: kube-system
spec:
  minAvailable: 1
  selector:
    matchLabels:
      k8s-app: konnectivity-agent
