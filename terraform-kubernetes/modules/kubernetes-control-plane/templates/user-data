## template: jinja
#cloud-config
manage_etc_hosts: false
hostname: {{ ds.meta_data.public_hostname }}
fqdn: {{ ds.meta_data.public_hostname }}.${domain}

write_files:
- path: /etc/vault/tls/ca.pem
  content: ${ vault_ca_pem }
  encoding: b64
  owner: kube:kube
  permissions: "0644"
- path: /etc/kubernetes/.role_id
  owner: kube:kube
  permissions: "0600"
  content: kubernetes-control-plane
- path: /etc/kubernetes/.instance_id
  owner: kube:kube
  permissions: "0600"
  content: "{{ ds.meta_data.instance_id }}"
- path: /etc/default/kube-apiserver
  owner: kube:kube
  permissions: "0644"
  content: |
    KUBE_APISERVER_ADVERTISE_ADDRESS={{ ds.meta_data.public_ipv4 }}
    KUBE_APISERVER_ETCD_SERVERS=${etcd_address}
    KUBE_APISERVER_SERVICE_ACCOUNT_ISSUER=https://kubernetes.default.svc.${kubernetes_cluster_domain}
    KUBE_APISERVER_SERVICE_CLUSTER_IP_RANGE=${kubernetes_service_cidr_ipv4},${kubernetes_service_cidr_ipv6}
    KUBE_APISERVER_OIDC_ISSUER_URL=${ oidc_issuer_url }
    KUBE_APISERVER_OIDC_CLIENT_ID=${ oidc_client_id }
    KUBE_APISERVER_OIDC_USERNAME_CLAIM=${ oidc_username_claim }
    KUBE_APISERVER_OIDC_GROUPS_CLAIM=${ oidc_groups }

- path: /etc/default/kube-controller-manager
  owner: kube:kube
  permissions: "0644"
  content: |
    KUBE_CONTROLLER_MANAGER_CLUSTER_CIDR=${kubernetes_pod_cidr_ipv4},${kubernetes_pod_cidr_ipv6}
    KUBE_CONTROLLER_MANAGER_SERVICE_CLUSTER_IP_RANGE=${kubernetes_service_cidr_ipv4},${kubernetes_service_cidr_ipv6}
    KUBE_CONTROLLER_MANAGER_NODE_CIDR_MASK_SIZE_IPV4=24
    KUBE_CONTROLLER_MANAGER_NODE_CIDR_MASK_SIZE_IPV6=120
- path: /home/kube/kubelet-bootstrap-rbac.yaml
  owner: kube:kube
  encoding: b64
  permissions: "0600"
  content: ${kubelet_bootstrap_manifests}
- path: /home/kube/exoscale-cloud-controller-manager-rbac.yaml
  owner: kube:kube
  encoding: b64
  permissions: "0600"
  content: ${exoscale_cloud_controller_manager_manifests}
- path: /home/kube/exoscale-cluster-autoscaler-rbac.yaml
  owner: kube:kube
  encoding: b64
  permissions: "0600"
  content: ${exoscale_cluster_autoscaler_manifests}
- path: /usr/local/bin/wait-vault
  owner: kube:kube
  permissions: "0755"
  content: |
    #!/bin/bash
    while [ $(curl -sk -o /dev/null -w "%%{http_code}" "${vault_cluster_healthcheck_url}") != '200' ]; do
        sleep 1;
    done
- path: /usr/local/bin/wait-etcd
  owner: kube:kube
  permissions: "0755"
  content: |
    #!/bin/bash
    while [ $(curl -s -o /dev/null -w "%%{http_code}" "${etcd_healthcheck_url}") != '200' ]; do
        sleep 1;
    done
- path: /usr/local/bin/wait-apiserver
  owner: root:root
  permissions: "0755"
  content: |
    #!/bin/bash
    while [ $(curl -s -o /dev/null -w "%%{http_code}" "http://127.0.0.1:6444/healthz") != '200' ]; do
        sleep 1;
    done

runcmd:
# Vault CLI
- [sed, -i, "s|CLUSTER_NAME|${vault_cluster_name}|g", "/etc/default/vault"]
# Vault agent: common settings
- [sed, -i, "s|CLUSTER_NLB_ADDRESS|${kubernetes_cluster_ip_address}|g", "/etc/kubernetes/vault.hcl"]
- [sed, -i, "s|CLUSTER_MEMBER_ADDRESS|{{ ds.meta_data.public_ipv4 }}|g", "/etc/kubernetes/vault.hcl"]
- [sed, -i, "s|CLUSTER_INTERNAL_ADDRESS|${kubernetes_cluster_internal_ip}|g", "/etc/kubernetes/vault.hcl"]
- [sed, -i, "s|VAULT_ADDRESS|${vault_cluster_address}|g", "/etc/kubernetes/vault.hcl"]
## api server
- [sed, -i, "s|CLUSTER_DOMAIN_NAME|${kubernetes_cluster_domain}|g", "/etc/kubernetes/vault.hcl"]
- [sed, -i, "s|CLUSTER_MEMBER_NAME|{{ ds.meta_data.public_hostname }}|g", "/etc/kubernetes/vault.hcl"]
- [sed, -i, "s|CLUSTER_NAME|${kubernetes_cluster_name}|g", "/etc/kubernetes/vault.hcl"]
- [sed, -i, "s|EXOSCALE_CLUSTER_ZONE|${zone}|g", "/etc/kubernetes/vault.hcl"]

- [/usr/local/bin/wait-vault]
- [/usr/local/bin/wait-etcd]
- [systemctl, enable, kube-vault-agent.service]
- [systemctl, start, kube-vault-agent.service]
- [/usr/local/bin/wait-apiserver]
- [sudo, -u, kube, kubectl, apply, -f, /home/kube/kubelet-bootstrap-rbac.yaml]
- [sudo, -u, kube, kubectl, apply, -f, /home/kube/exoscale-cloud-controller-manager-rbac.yaml]
- [sudo, -u, kube, kubectl, apply, -f, /home/kube/exoscale-cluster-autoscaler-rbac.yaml]
