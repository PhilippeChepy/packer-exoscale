---

- name: Add Kubernetes API Server group
  tags:
    - kube-apiserver
  become: true
  ansible.builtin.group:
    name: "{{ kube_apiserver_group }}"
    state: present

- name: Add Kubernetes API Server user
  tags:
    - kube-apiserver
  become: true
  ansible.builtin.user:
    name: "{{ kube_apiserver_user }}"
    comment: "Kubernetes API Server user"
    group: "{{ kube_apiserver_group }}"
    groups: "{{ kube_apiserver_groups }}"
    shell: /bin/bash
    system: true

- name: Check Kubernetes API Server checksum file
  tags:
    - kube-apiserver
  ansible.builtin.stat:
    path: "/tmp/{{ kube_apiserver_shasums }}"
  become: false
  register: kube_apiserver_checksum

- name: Get Kubernetes API Server checksum file
  tags:
    - kube-apiserver
  ansible.builtin.get_url:
    url: "{{ kube_apiserver_checksum_file_url }}"
    dest: "/tmp/{{ kube_apiserver_shasums }}"
    owner: "{{ kube_apiserver_user }}"
    group: "{{ kube_apiserver_group }}"
    mode: "0666"
  when: not kube_apiserver_checksum.stat.exists | bool

- name: Get Kubernetes API Server checksum
  tags:
    - kube-apiserver
    - skip_ansible_lint
  ansible.builtin.shell: |
    set -o pipefail
    grep "v{{ kube_apiserver_version }}/bin/{{ kube_apiserver_os }}/{{ kube_apiserver_architecture }}/kube-apiserver$" "/tmp/{{ kube_apiserver_shasums }}" | awk '{print $1}'
  args:
    executable: /bin/bash
  changed_when: false
  become: false
  register: kube_apiserver_sha256

- name: "Download Kubernetes API Server â†’ {{ kube_apiserver_url }}"
  tags:
    - kube-apiserver
  ansible.builtin.get_url:
    url: "{{ kube_apiserver_url }}"
    dest: "{{ kube_apiserver_bin_path }}/kube-apiserver"
    checksum: "sha256:{{ kube_apiserver_sha256.stdout }}"
    owner: "{{ kube_apiserver_user }}"
    group: "{{ kube_apiserver_group }}"
    mode: "0755"

- name: Create directories
  tags:
    - kube-apiserver
  become: true
  ansible.builtin.file:
    dest: "{{ item }}"
    state: directory
    owner: "root"
    group: "root"
    mode: 0755
  with_items:
    - "{{ kube_apiserver_kubernetes_base_path }}"

- name: Create directories
  tags:
    - kube-apiserver
  become: true
  ansible.builtin.file:
    dest: "{{ item }}"
    state: directory
    owner: "{{ kube_apiserver_user }}"
    group: "{{ kube_apiserver_group }}"
    mode: 0755
  with_items:
    - "{{ kube_apiserver_config_path }}"

- name: systemd unit
  tags:
    - kube-apiserver
  become: true
  ansible.builtin.template:
    src: "kube-apiserver.service.j2"
    dest: "/etc/systemd/system/kube-apiserver.service"
    force: true
    owner: root
    group: root
    mode: "0644"
  notify: reload systemd

- name: Add user to sudoers for service restart
  tags:
    - kube-apiserver
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/sudoers.d/kube-apiserver"
    line: "%{{ kube_apiserver_user }} ALL= NOPASSWD: /bin/systemctl restart kube-apiserver"
    owner: "root"
    group: "root"
    create: true
    mode: 0440

- name: apiserver additional helper scripts
  tags:
    - kube-apiserver
  become: true
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ kube_apiserver_bin_path }}/{{ item }}"
    force: true
    owner: root
    group: root
    mode: "0755"
  loop:
    - kube-healthcheck
    - kube-apiserver-launcher
