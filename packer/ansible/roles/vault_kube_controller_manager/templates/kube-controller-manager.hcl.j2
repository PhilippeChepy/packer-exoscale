vault {
  address = "VAULT_ADDRESS"
  ca_cert = "{{ vault_tls_config_path }}/ca.pem"
}

exit_after_auth = true

auto_auth {
  method "approle" {
    mount_path = "{{ vault_agent_kube_control_plane_auth_path }}"

    config = {
      role_id_file_path                   = "{{ vault_agent_approle_path }}/.role_id"
      secret_id_file_path                 = "{{ vault_agent_approle_path }}/.instance_id"
      remove_secret_id_file_after_reading = false
    }
  }
}

template {
  contents    = <<EOT
apiVersion: v1
clusters:
- cluster:
<<- with secret "{{ vault_agent_secrets['pki_controlplane_ca_chain'] }}" >>
    certificate-authority-data: << base64Encode .Data.ca_chain >>
<<- end >>
    server: https://CLUSTER_MEMBER_ADDRESS:6443
  name: local
contexts:
- context:
    cluster: local
    user: system:kube-controller-manager
  name: default
current-context: default
kind: Config
preferences: {}
users:
- name: system:kube-controller-manager
  user:
<<- with secret "{{ vault_agent_secrets['pki_controlplane_cert_controller_manager'] }}" "common_name=system:kube-controller-manager" "ttl=24h" >>
    client-certificate-data: << base64Encode .Data.certificate >>
    client-key-data: << base64Encode .Data.private_key >>
<<- end >>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_controller_manager_config_path }}/kube-controller-manager.kubeconfig"
  perms                = 0600
  user                 = "{{ kube_controller_manager_user }}"
  group                = "{{ kube_controller_manager_group }}"
}

template {
  contents    = <<EOT
<<- with secret "{{ vault_agent_secrets['pki_aggregationlayer_ca_chain'] }}" >>
<< .Data.ca_chain >>
<<- end >>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_controller_manager_config_path }}/aggregation-layer-ca.pem"
  perms                = 0644
  user                 = "{{ kube_controller_manager_user }}"
  group                = "{{ kube_controller_manager_group }}"
}

template {
  contents    = <<EOT
<<- with secret "{{ vault_agent_secrets['kv_kubelet_pki'] }}" ->>
<< .Data.certificate >>
<<- end >>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_controller_manager_config_path }}/node-ca.pem"
  perms                = 0644
  user                 = "{{ kube_controller_manager_user }}"
  group                = "{{ kube_controller_manager_group }}"
}

template {
  contents    = <<EOT
<<- with secret "{{ vault_agent_secrets['kv_kubelet_pki'] }}" ->>
<< .Data.private_key >>
<<- end >>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_controller_manager_config_path }}/node-ca.key"
  perms                = 0600
  user                 = "{{ kube_controller_manager_user }}"
  group                = "{{ kube_controller_manager_group }}"
}

template {
  contents    =  <<EOT
<<- with secret "{{ vault_agent_secrets['pki_controlplane_ca_chain'] }}" >>
<< .Data.ca_chain >>
<<- end >>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_controller_manager_config_path }}/server-ca.pem"
  perms                = 0644
  user                 = "{{ kube_controller_manager_user }}"
  group                = "{{ kube_controller_manager_group }}"
}

template {
  contents    = <<EOT
<<- with secret "{{ vault_agent_secrets['kv_serviceaccount'] }}" ->>
<< .Data.private_key >>
<<- end >>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_controller_manager_config_path }}/service-account-private-key.pem"
  perms                = 0600
  user                 = "{{ kube_controller_manager_user }}"
  group                = "{{ kube_controller_manager_group }}"
}
