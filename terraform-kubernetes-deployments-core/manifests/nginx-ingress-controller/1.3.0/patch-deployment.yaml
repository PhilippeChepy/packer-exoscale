apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  template:
    spec:
      hostNetwork: true
      containers:
      - name: controller
        imagePullPolicy: Always
        args:
          - /nginx-ingress-controller
          - --election-id=ingress-controller-leader
          - --controller-class=k8s.io/ingress-nginx-${ ingress_class_suffix }
          - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
          - --default-ssl-certificate=$(POD_NAMESPACE)/${ ingress_default_cert }
          - --ingress-class-by-name=true
          - --validating-webhook=:8443
          - --validating-webhook-certificate=/usr/local/certificates/cert
          - --validating-webhook-key=/usr/local/certificates/key
          - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
          - --default-backend-service=$(POD_NAMESPACE)/nginx-errors
          - --update-status
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            # add: null
            drop:
            - ALL
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 512Mi
      nodeSelector:
        ${ ingress_node_label_name }: ${ ingress_node_label_value }
      tolerations:
      - key: ${ ingress_node_taint_name }
        operator: Equal
        value: ${ ingress_node_taint_value }
        effect: NoSchedule