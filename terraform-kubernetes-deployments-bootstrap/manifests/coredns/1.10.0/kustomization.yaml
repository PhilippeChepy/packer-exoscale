resources:
- pod-disruption-budget.yaml

images:
- name: coredns/coredns
  newTag: 1.10.0

patches:
  - target:
      kind: Deployment
      name: coredns-coredns
    patch: |-
      - op: replace
        path: /spec/strategy/rollingUpdate
        value:
          maxUnavailable: 1
  - target:
      kind: ClusterRole
      name: coredns-coredns
    patch: |-
      - op: replace
        path: /metadata/name
        value: coredns
  - target:
      kind: ClusterRoleBinding
      name: coredns-coredns
    patch: |-
      - op: replace
        path: /metadata/name
        value: coredns
  - target:
      kind: ConfigMap
      name: coredns-coredns
    patch: |-
      - op: replace
        path: /metadata/name
        value: coredns
  - target:
      kind: Service
      name: coredns-coredns
    patch: |-
      - op: replace
        path: /metadata/name
        value: coredns
  - target:
      kind: Deployment
      name: coredns-coredns
    patch: |-
      - op: add
        path: /spec/template/metadata/labels/rule.${platform_domain}~1allow-egress-api-server
        value: "true"
      - op: add
        path: /spec/template/metadata/labels/rule.${platform_domain}~1allow-egress-dns
        value: "true"
      - op: replace
        path: /metadata/name
        value: coredns
      - op: add
        path: /spec/template/spec/containers/0/securityContext
        value:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      - op: add
        path: /spec/template/spec/affinity
        value:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  k8s-app: kube-dns
      - op: add
        path: /spec/template/spec/securityContext
        value:
          sysctls:
            - name: net.ipv4.ip_unprivileged_port_start
              value: "53"
  - target:
      kind: Service
      name: coredns-coredns
    patch: |-
      - op: add
        path: /spec/ipFamilyPolicy
        value: PreferDualStack
      - op: add
        path: /spec/ipFamilies
        value:  
          - IPv4
          - IPv6
      - op: add
        path: /spec/clusterIPs
        value:
        - ${ kubernetes_dns_service_ipv4 }
        - ${ kubernetes_dns_service_ipv6 }
      - op: replace
        path: /spec/clusterIP
        value: ${ kubernetes_dns_service_ipv4 }

helmGlobals:
  chartHome: .helm
  configHome: .helm

helmCharts:
- name: coredns
  repo: https://coredns.github.io/helm
  releaseName: coredns
  namespace: kube-system
  version: 1.19.4
  valuesInline:
    servers:
    - zones:
      - zone: .
      port: 53
      # If serviceType is nodePort you can specify nodePort here
      # nodePort: 30053
      plugins:
      - name: errors
      # Serves a /health endpoint on :8080, required for livenessProbe
      - name: health
        configBlock: |-
          lameduck 5s
      # Serves a /ready endpoint on :8181, required for readinessProbe
      - name: ready
      # Required to query kubernetes API for data
      - name: kubernetes
        parameters: ${ kubernetes_cluster_domain } in-addr.arpa ip6.arpa
        configBlock: |-
          pods verified
          fallthrough in-addr.arpa ip6.arpa
          ttl 30
      # Serves a /metrics endpoint on :9153, required for serviceMonitor
      - name: prometheus
        parameters: 0.0.0.0:9153
      - name: forward
        parameters: . /etc/resolv.conf
      - name: cache
        parameters: 30
      - name: loop
      - name: reload
      - name: loadbalance
    replicaCount: 2
    priorityClassName: system-cluster-critical
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              k8s-app: kube-dns

namespace: kube-system