vault {
  address = "VAULT_ADDRESS"
  ca_cert = "{{ vault_tls_config_path }}/ca.pem"
}

auto_auth {
  method "approle" {
    mount_path = "{{ vault_agent_kube_control_plane_auth_path }}"

    config = {
      role_id_file_path                   = "{{ vault_agent_kube_control_plane_config_path }}/.role_id"
      secret_id_file_path                 = "{{ vault_agent_kube_control_plane_config_path }}/.instance_id"
      remove_secret_id_file_after_reading = false
    }
  }
}

## API Server

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_etcd_cert_apiserver'] }}{% raw %}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" -}}
{{ .Data.issuing_ca }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_apiserver_config_path }}/etcd-ca.pem"
  command     = "sudo systemctl restart kube-apiserver"
  perms       = 0644
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_etcd_cert_apiserver'] }}{% raw %}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" -}}
{{ .Data.certificate }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_apiserver_config_path }}/etcd.pem"
  command     = "sudo systemctl restart kube-apiserver"
  perms       = 0644
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_etcd_cert_apiserver'] }}{% raw %}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" -}}
{{ .Data.private_key }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_apiserver_config_path }}/etcd.key"
  command     = "sudo systemctl restart kube-apiserver"
  perms       = 0600
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_controlplane_ca_chain'] }}{% raw %}" -}}
{{ .Data.ca_chain }}
{{- end }}
{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_kubelet_ca_chain'] }}{% raw %}" }}
{{ .Data.ca_chain }}
{{- end }}
{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_client_ca_chain'] }}{% raw %}" }}
{{ .Data.ca_chain }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_apiserver_config_path }}/server-ca.pem"
  command     = "sudo systemctl restart kube-apiserver"
  perms       = 0644
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_controlplane_cert_apiserver'] }}{% raw %}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME,CLUSTER_MEMBER_NAME,kube-api.CLUSTER_DOMAIN_NAME,CLUSTER_NAME.CLUSTER_DOMAIN_NAME,CLUSTER_MEMBER_NAME.CLUSTER_DOMAIN_NAME,kubernetes,kubernetes.default,kubernetes.default.svc,kubernetes.default.svc.CLUSTER_DOMAIN_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS,CLUSTER_INTERNAL_ADDRESS" "ttl=24h" -}}
{{ .Data.certificate }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_apiserver_config_path }}/server.pem"
  command     = "sudo systemctl restart kube-apiserver"
  perms       = 0644
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_controlplane_cert_apiserver'] }}{% raw %}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME,CLUSTER_MEMBER_NAME,kube-api.CLUSTER_DOMAIN_NAME,CLUSTER_NAME.CLUSTER_DOMAIN_NAME,CLUSTER_MEMBER_NAME.CLUSTER_DOMAIN_NAME,kubernetes,kubernetes.default,kubernetes.default.svc,kubernetes.default.svc.CLUSTER_DOMAIN_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS,CLUSTER_INTERNAL_ADDRESS" "ttl=24h" -}}
{{ .Data.private_key }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_apiserver_config_path }}/server.key"
  command     = "sudo systemctl restart kube-apiserver"
  perms       = 0600
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_aggregationlayer_cert_apiserver'] }}{% raw %}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME,CLUSTER_MEMBER_NAME,CLUSTER_NAME.CLUSTER_DOMAIN_NAME,CLUSTER_MEMBER_NAME.CLUSTER_DOMAIN_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" -}}
{{ .Data.issuing_ca }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_apiserver_config_path }}/aggregation-layer-ca.pem"
  command     = "sudo systemctl restart kube-apiserver"
  perms       = 0644
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_aggregationlayer_cert_apiserver'] }}{% raw %}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME,CLUSTER_MEMBER_NAME,CLUSTER_NAME.CLUSTER_DOMAIN_NAME,CLUSTER_MEMBER_NAME.CLUSTER_DOMAIN_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" -}}
{{ .Data.certificate }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_apiserver_config_path }}/aggregation-layer.pem"
  command     = "sudo systemctl restart kube-apiserver"
  perms       = 0644
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_aggregationlayer_cert_apiserver'] }}{% raw %}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME,CLUSTER_MEMBER_NAME,CLUSTER_NAME.CLUSTER_DOMAIN_NAME,CLUSTER_MEMBER_NAME.CLUSTER_DOMAIN_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" -}}
{{ .Data.private_key }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_apiserver_config_path }}/aggregation-layer.key"
  command     = "sudo systemctl restart kube-apiserver"
  perms       = 0600
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_kubelet_cert_apiserver'] }}{% raw %}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME,CLUSTER_MEMBER_NAME,CLUSTER_NAME.CLUSTER_DOMAIN_NAME,CLUSTER_MEMBER_NAME.CLUSTER_DOMAIN_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" -}}
{{ .Data.issuing_ca }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_apiserver_config_path }}/kubelet-ca.pem"
  command     = "sudo systemctl restart kube-apiserver"
  perms       = 0644
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_kubelet_cert_apiserver'] }}{% raw %}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME,CLUSTER_MEMBER_NAME,CLUSTER_NAME.CLUSTER_DOMAIN_NAME,CLUSTER_MEMBER_NAME.CLUSTER_DOMAIN_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" -}}
{{ .Data.certificate }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_apiserver_config_path }}/kubelet-client.pem"
  command     = "sudo systemctl restart kube-apiserver"
  perms       = 0644
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_kubelet_cert_apiserver'] }}{% raw %}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME,CLUSTER_MEMBER_NAME,CLUSTER_NAME.CLUSTER_DOMAIN_NAME,CLUSTER_MEMBER_NAME.CLUSTER_DOMAIN_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" -}}
{{ .Data.private_key }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_apiserver_config_path }}/kubelet-client.key"
  command     = "sudo systemctl restart kube-apiserver"
  perms       = 0600
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['kv_serviceaccount'] }}{% raw %}" -}}
{{ .Data.private_key }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_apiserver_config_path }}/service-account-key.pem"
  command     = "sudo systemctl restart kube-apiserver"
  perms       = 0600
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['kv_secrets_encryption'] }}{% raw %}" -}}
kind: EncryptionConfiguration
apiVersion: apiserver.config.k8s.io/v1
resources:
  - resources:
      - secrets
    providers:
      - aescbc:
          keys:
{{- range $key_name, $key_data := .Data.keys }}
            - name: {{ $key_name }}
              secret: {{ base64Encode $key_data }}
{{- end }}
      - identity: {}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_apiserver_config_path }}/encryption-configuration.yaml"
  command     = "sudo systemctl restart kube-apiserver"
  perms       = 0600
}

## Controller Manager

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_controlplane_cert_controller_manager'] }}{% raw %}" "common_name=system:kube-controller-manager" "ttl=24h" -}}
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: {{ base64Encode .Data.issuing_ca }}
    server: https://CLUSTER_MEMBER_ADDRESS:6443
  name: local
contexts:
- context:
    cluster: local
    user: system:kube-controller-manager
  name: default
current-context: default
kind: Config
preferences: {}
users:
- name: system:kube-controller-manager
  user:
    client-certificate-data: {{ base64Encode .Data.certificate }}
    client-key-data: {{ base64Encode .Data.private_key }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_controller_manager_config_path }}/kube-controller-manager.kubeconfig"
  command     = "sudo systemctl restart kube-controller-manager"
  perms       = 0600
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_aggregationlayer_ca_chain'] }}{% raw %}"  -}}
{{ .Data.ca_chain }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_controller_manager_config_path }}/aggregation-layer-ca.pem"
  command     = "sudo systemctl restart kube-controller-manager"
  perms       = 0644
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['kv_kubelet_pki'] }}{% raw %}"  -}}
{{ .Data.certificate }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_controller_manager_config_path }}/node-ca.pem"
  command     = "sudo systemctl restart kube-controller-manager"
  perms       = 0644
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['kv_kubelet_pki'] }}{% raw %}"  -}}
{{ .Data.private_key }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_controller_manager_config_path }}/node-ca.key"
  command     = "sudo systemctl restart kube-controller-manager"
  perms       = 0644
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_controlplane_ca_chain'] }}{% raw %}"  -}}
{{ .Data.ca_chain }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_controller_manager_config_path }}/server-ca.pem"
  command     = "sudo systemctl restart kube-controller-manager"
  perms       = 0644
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['kv_serviceaccount'] }}{% raw %}" -}}
{{ .Data.private_key }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_controller_manager_config_path }}/service-account-private-key.pem"
  command     = "sudo systemctl restart kube-controller-manager"
  perms       = 0600
}

## Scheduler

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_controlplane_cert_scheduler'] }}{% raw %}" "common_name=system:kube-scheduler" "ttl=24h" -}}
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: {{ base64Encode .Data.issuing_ca }}
    server: https://CLUSTER_MEMBER_ADDRESS:6443
  name: cluster
contexts:
- context:
    cluster: cluster
    user: system:kube-scheduler
  name: default
current-context: default
kind: Config
preferences: {}
users:
- name: system:kube-scheduler
  user:
    client-certificate-data: {{ base64Encode .Data.certificate }}
    client-key-data: {{ base64Encode .Data.private_key }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_scheduler_config_path }}/kube-scheduler.kubeconfig"
  command     = "sudo systemctl restart kube-scheduler"
  perms       = 0600
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_controlplane_ca_chain'] }}{% raw %}" -}}
{{ .Data.ca_chain }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ kube_scheduler_config_path }}/server-ca.pem"
  command     = "sudo systemctl restart kube-scheduler"
  perms       = 0644
}

template {
  contents    = <<EOT
{% raw %}
apiVersion: v1
clusters:
- cluster:
{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_controlplane_ca_chain'] }}{% raw %}" }}
    certificate-authority-data: {{ base64Encode .Data.ca_chain }}
{{- end }}
    server: https://CLUSTER_MEMBER_ADDRESS:6443
  name: cluster
contexts:
- context:
    cluster: cluster
    user: cluster-admin
  name: default
current-context: default
kind: Config
preferences: {}
users:
{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_client_cert_admin'] }}{% raw %}" "common_name=cluster-admin" "ttl=24h" }}
- name: cluster-admin
  user:
    client-certificate-data: {{ base64Encode .Data.certificate }}
    client-key-data: {{ base64Encode .Data.private_key }}
{{- end }}
{% endraw %}
EOT
  destination = "/home/{{ kubectl_user }}/.kube/config"
  perms       = 0600
}

## konnectivity

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_controlplane_cert_konnectivity'] }}{% raw %}" "common_name=system:konnectivity-server" "ttl=24h" -}}
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: {{ base64Encode .Data.issuing_ca }}
    server: https://CLUSTER_MEMBER_ADDRESS:6443
  name: cluster
contexts:
- context:
    cluster: cluster
    user: system:konnectivity-server
  name: default
current-context: default
kind: Config
preferences: {}
users:
- name: system:konnectivity-server
  user:
    client-certificate-data: {{ base64Encode .Data.certificate }}
    client-key-data: {{ base64Encode .Data.private_key }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ konnectivity_server_config_path }}/konnectivity-server.kubeconfig"
  command     = "sudo systemctl restart konnectivity"
  perms       = 0600
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_konnectivity_cert_cluster'] }}{% raw %}" "common_name=konnectivity" "alt_names=konnectivity" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS,127.0.0.1" "ttl=24h" -}}
{{ .Data.private_key }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ konnectivity_server_config_path }}/cluster.key"
  command     = "sudo systemctl restart konnectivity"
  perms       = 0600
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_konnectivity_cert_cluster'] }}{% raw %}" "common_name=konnectivity" "alt_names=konnectivity" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS,127.0.0.1" "ttl=24h" -}}
{{ .Data.certificate }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ konnectivity_server_config_path }}/cluster.pem"
  command     = "sudo systemctl restart konnectivity"
  perms       = 0644
}

## Cloud controller manager: Exoscale

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['kv_exoscale_cloud_controller_manager_exoscale_api'] }}{% raw %}" -}}
EXOSCALE_API_KEY="{{ .Data.api_key }}"
EXOSCALE_API_SECRET="{{ .Data.api_secret }}"
EXOSCALE_ZONE="EXOSCALE_CLUSTER_ZONE"
EXOSCALE_SKS_AGENT_RUNNERS="node-csr-validation"
{{- end }}
{% endraw %}
EOT
  destination = "{{ exoscale_cloud_controller_manager_config_path }}/environment"
  command     = "sudo systemctl restart exoscale-cloud-controller-manager"
  perms       = 0644
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_controlplane_cert_cloud_controller_manager'] }}{% raw %}" "common_name=exoscale-cloud-controller-manager" "ttl=24h" -}}
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: {{ base64Encode .Data.issuing_ca }}
    server: https://CLUSTER_MEMBER_ADDRESS:6443
  name: cluster
contexts:
- context:
    cluster: cluster
    user: exoscale-cloud-controller-manager
  name: default
current-context: default
kind: Config
preferences: {}
users:
- name: exoscale-cloud-controller-manager
  user:
    client-certificate-data: {{ base64Encode .Data.certificate }}
    client-key-data: {{ base64Encode .Data.private_key }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ exoscale_cloud_controller_manager_config_path }}/cloud-controller-manager.kubeconfig"
  command     = "sudo systemctl restart exoscale-cloud-controller-manager"
  perms       = 0600
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['kv_exoscale_cluster_autoscaler_exoscale_api'] }}{% raw %}" -}}
EXOSCALE_API_KEY="{{ .Data.api_key }}"
EXOSCALE_API_SECRET="{{ .Data.api_secret }}"
EXOSCALE_ZONE="EXOSCALE_CLUSTER_ZONE"
{{- end }}
{% endraw %}
EOT
  destination = "{{ exoscale_cluster_autoscaler_config_path }}/environment"
  command     = "sudo systemctl restart exoscale-cloud-controller-manager"
  perms       = 0644
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_kube_control_plane_paths['pki_controlplane_cert_cluster_autoscaler'] }}{% raw %}" "common_name=exoscale-cluster-autoscaler" "ttl=24h" -}}
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: {{ base64Encode .Data.issuing_ca }}
    server: https://CLUSTER_MEMBER_ADDRESS:6443
  name: cluster
contexts:
- context:
    cluster: cluster
    user: cluster-autoscaler
  name: default
current-context: default
kind: Config
preferences: {}
users:
- name: cluster-autoscaler
  user:
    client-certificate-data: {{ base64Encode .Data.certificate }}
    client-key-data: {{ base64Encode .Data.private_key }}
{{- end }}
{% endraw %}
EOT
  destination = "{{ exoscale_cluster_autoscaler_config_path }}/cluster-autoscaler.kubeconfig"
  command     = "sudo systemctl restart cluster-autoscaler"
  perms       = 0600
}
