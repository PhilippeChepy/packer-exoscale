apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: $external-dns:namespace$
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress-$ingress:class_suffix$-external-dns-cloudflare
  namespace: $external-dns:namespace$
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns-$ingress:class_suffix$
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - pods
  - services
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-dns-$ingress:class_suffix$-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns-$ingress:class_suffix$
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: $external-dns:namespace$
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-$ingress:class_suffix$-external-dns-cloudflare-tokenreview-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: ingress-$ingress:class_suffix$-external-dns-cloudflare
  namespace: $external-dns:namespace$
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: ingress-$ingress:class_suffix$-external-dns-cloudflare
  name: ingress-$ingress:class_suffix$-external-dns-cloudflare
  namespace: $external-dns:namespace$
type: kubernetes.io/service-account-token
---
apiVersion: v1
data:
  vault-ca-cert: $vault:cluster_ca_cert$
kind: Secret
metadata:
  name: ingress-$ingress:class_suffix$-vault-cloudflare
  namespace: $external-dns:namespace$
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: $external-dns:namespace$
spec:
  replicas: 2
  selector:
    matchLabels:
      app: external-dns
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: external-dns
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --source=ingress
        - --domain-filter=$ingress:domain$
        - --provider=cloudflare
        env:
        - name: CF_API_TOKEN
          valueFrom:
            secretKeyRef:
              key: api-token
              name: ingress-$ingress:class_suffix$-cloudflare-api-token
        image: k8s.gcr.io/external-dns/external-dns:v0.12.2
        name: external-dns
        resources:
          limits:
            cpu: 100m
            memory: 32Mi
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
      serviceAccountName: external-dns
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app: external-dns
  name: external-dns
  namespace: $external-dns:namespace$
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: external-dns
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: ingress-$ingress:class_suffix$-vault-cloudflare
  namespace: $external-dns:namespace$
spec:
  data:
  - remoteRef:
      key: $ingress:class_suffix$-external-dns-cloudflare
      property: api-key
    secretKey: api-token
  refreshInterval: 60s
  secretStoreRef:
    kind: SecretStore
    name: ingress-$ingress:class_suffix$-vault-cloudflare
  target:
    name: ingress-$ingress:class_suffix$-cloudflare-api-token
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: ingress-$ingress:class_suffix$-vault-cloudflare
  namespace: $external-dns:namespace$
spec:
  provider:
    vault:
      auth:
        kubernetes:
          mountPath: kubernetes
          role: ingress-$ingress:class_suffix$-external-dns-cloudflare
          secretRef:
            key: token
            name: ingress-$ingress:class_suffix$-external-dns-cloudflare
      caProvider:
        key: vault-ca-cert
        name: ingress-$ingress:class_suffix$-vault-cloudflare
        type: Secret
      path: kv/platform/cloudflare
      server: $vault:cluster_addr$
      version: v1
