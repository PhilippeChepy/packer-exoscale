vault {
  address = "VAULT_ADDRESS"
  ca_cert = "{{ vault_tls_config_path }}/ca.pem"
}

exit_after_auth = true

auto_auth {
  method "approle" {
    mount_path = "{{ vault_agent_kube_control_plane_auth_path }}"

    config = {
      role_id_file_path                   = "{{ vault_agent_approle_path }}/.role_id"
      secret_id_file_path                 = "{{ vault_agent_approle_path }}/.instance_id"
      remove_secret_id_file_after_reading = false
    }
  }
}

template {
  contents    = <<EOT
<<- with secret "{{ vault_agent_secrets['pki_controlplane_ca_chain'] }}" >>
<< .Data.ca_chain >>
<<- end >>
<<- with secret "{{ vault_agent_secrets['pki_kubelet_ca_chain'] }}" >>
<< .Data.ca_chain >>
<<- end >>
<<- with secret "{{ vault_agent_secrets['pki_client_ca_chain'] }}" >>
<< .Data.ca_chain >>
<<- end >>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination = "{{ kube_apiserver_config_path }}/server-ca.pem"
  perms       = 0644
  user        = "{{ kube_apiserver_user }}"
  group       = "{{ kube_apiserver_group }}"
}

template {
  contents    = <<EOT
<<- with secret "{{ vault_agent_secrets['pki_controlplane_cert_apiserver'] }}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME,CLUSTER_MEMBER_NAME,kube-api.CLUSTER_DOMAIN_NAME,CLUSTER_NAME.CLUSTER_DOMAIN_NAME,CLUSTER_MEMBER_NAME.CLUSTER_DOMAIN_NAME,kubernetes,kubernetes.default,kubernetes.default.svc,kubernetes.default.svc.CLUSTER_DOMAIN_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS,CLUSTER_INTERNAL_ADDRESS" "ttl=24h" ->>
<< .Data.certificate >>
<<- end ->>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_apiserver_config_path }}/server.pem"
  perms                = 0644
  user                 = "{{ kube_apiserver_user }}"
  group                = "{{ kube_apiserver_group }}"
}

template {
  contents    = <<EOT
<<- with secret "{{ vault_agent_secrets['pki_controlplane_cert_apiserver'] }}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME,CLUSTER_MEMBER_NAME,kube-api.CLUSTER_DOMAIN_NAME,CLUSTER_NAME.CLUSTER_DOMAIN_NAME,CLUSTER_MEMBER_NAME.CLUSTER_DOMAIN_NAME,kubernetes,kubernetes.default,kubernetes.default.svc,kubernetes.default.svc.CLUSTER_DOMAIN_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS,CLUSTER_INTERNAL_ADDRESS" "ttl=24h" ->>
<< .Data.private_key >>
<<- end ->>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_apiserver_config_path }}/server.key"
  perms                = 0400
  user                 = "{{ kube_apiserver_user }}"
  group                = "{{ kube_apiserver_group }}"
}

### etcd client

template {
  contents    = <<EOT
<<- with secret "{{ vault_agent_secrets['pki_etcd_cert_apiserver'] }}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" ->>
<< .Data.issuing_ca >>
<<- end ->>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_apiserver_config_path }}/etcd-ca.pem"
  perms                = 0644
  user                 = "{{ kube_apiserver_user }}"
  group                = "{{ kube_apiserver_group }}"
}

template {
  contents    = <<EOT
<<- with secret "{{ vault_agent_secrets['pki_etcd_cert_apiserver'] }}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" ->>
<< .Data.certificate >>
<<- end ->>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_apiserver_config_path }}/etcd.pem"
  perms                = 0644
  user                 = "{{ kube_apiserver_user }}"
  group                = "{{ kube_apiserver_group }}"
}

template {
  contents    = <<EOT
<<- with secret "{{ vault_agent_secrets['pki_etcd_cert_apiserver'] }}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" ->>
<< .Data.private_key >>
<<- end ->>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_apiserver_config_path }}/etcd.key"
  perms                = 0400
  user                 = "{{ kube_apiserver_user }}"
  group                = "{{ kube_apiserver_group }}"
}

### aggregation-layer client (e.g. metrics-server)

template {
  contents    = <<EOT
<<- with secret "{{ vault_agent_secrets['pki_aggregationlayer_cert_apiserver'] }}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME,CLUSTER_MEMBER_NAME,CLUSTER_NAME.CLUSTER_DOMAIN_NAME,CLUSTER_MEMBER_NAME.CLUSTER_DOMAIN_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" ->>
<< .Data.issuing_ca >>
<<- end ->>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_apiserver_config_path }}/aggregation-layer-ca.pem"
  perms                = 0644
  user                 = "{{ kube_apiserver_user }}"
  group                = "{{ kube_apiserver_group }}"
}

template {
  contents    = <<EOT
<<- with secret "{{ vault_agent_secrets['pki_aggregationlayer_cert_apiserver'] }}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME,CLUSTER_MEMBER_NAME,CLUSTER_NAME.CLUSTER_DOMAIN_NAME,CLUSTER_MEMBER_NAME.CLUSTER_DOMAIN_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" ->>
<< .Data.certificate >>
<<- end ->>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_apiserver_config_path }}/aggregation-layer.pem"
  perms                = 0644
  user                 = "{{ kube_apiserver_user }}"
  group                = "{{ kube_apiserver_group }}"
}

template {
  contents    = <<EOT
<<- with secret "{{ vault_agent_secrets['pki_aggregationlayer_cert_apiserver'] }}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME,CLUSTER_MEMBER_NAME,CLUSTER_NAME.CLUSTER_DOMAIN_NAME,CLUSTER_MEMBER_NAME.CLUSTER_DOMAIN_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" ->>
<< .Data.private_key >>
<<- end ->>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_apiserver_config_path }}/aggregation-layer.key"
  perms                = 0400
  user                 = "{{ kube_apiserver_user }}"
  group                = "{{ kube_apiserver_group }}"
}

### kubelet client

template {
  contents    = <<EOT
<<- with secret "{{ vault_agent_secrets['pki_kubelet_cert_apiserver'] }}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME,CLUSTER_MEMBER_NAME,CLUSTER_NAME.CLUSTER_DOMAIN_NAME,CLUSTER_MEMBER_NAME.CLUSTER_DOMAIN_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" ->>
<< .Data.issuing_ca >>
<<- end ->>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_apiserver_config_path }}/kubelet-ca.pem"
  perms                = 0644
  user                 = "{{ kube_apiserver_user }}"
  group                = "{{ kube_apiserver_group }}"
}

template {
  contents    = <<EOT
<<- with secret "{{ vault_agent_secrets['pki_kubelet_cert_apiserver'] }}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME,CLUSTER_MEMBER_NAME,CLUSTER_NAME.CLUSTER_DOMAIN_NAME,CLUSTER_MEMBER_NAME.CLUSTER_DOMAIN_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" ->>
<< .Data.certificate >>
<<- end ->>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_apiserver_config_path }}/kubelet.pem"
  perms                = 0644
  user                 = "{{ kube_apiserver_user }}"
  group                = "{{ kube_apiserver_group }}"
}

template {
  contents    = <<EOT
<<- with secret "{{ vault_agent_secrets['pki_kubelet_cert_apiserver'] }}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME,CLUSTER_MEMBER_NAME,CLUSTER_NAME.CLUSTER_DOMAIN_NAME,CLUSTER_MEMBER_NAME.CLUSTER_DOMAIN_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" ->>
<< .Data.private_key >>
<<- end ->>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_apiserver_config_path }}/kubelet.key"
  perms                = 0400
  user                 = "{{ kube_apiserver_user }}"
  group                = "{{ kube_apiserver_group }}"
}

### Misc

template {
  contents    = <<EOT
<<- with secret "{{ vault_agent_secrets['kv_serviceaccount'] }}" ->>
<< .Data.private_key >>
<<- end >>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_apiserver_config_path }}/service-account-key.pem"
  user                 = "{{ kube_apiserver_user }}"
  group                = "{{ kube_apiserver_group }}"
  perms                = 0600
}

template {
  contents    = <<EOT
<<- with secret "{{ vault_agent_secrets['kv_secrets_encryption'] }}" ->>
kind: EncryptionConfiguration
apiVersion: apiserver.config.k8s.io/v1
resources:
  - resources:
      - secrets
    providers:
      - aescbc:
          keys:
<<- range $key_name, $key_data := .Data.keys >>
            - name: << $key_name >>
              secret: << base64Encode $key_data >>
<<- end >>
      - identity: {}
<<- end >>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "{{ kube_apiserver_config_path }}/encryption-configuration.yaml"
  perms                = 0600
  user                 = "{{ kube_apiserver_user }}"
  group                = "{{ kube_apiserver_group }}"
}

template {
  contents    = <<EOT
apiVersion: v1
clusters:
- cluster:
<<- with secret "{{ vault_agent_secrets['pki_controlplane_ca_chain'] }}" >>
    certificate-authority-data: << base64Encode .Data.ca_chain >>
<<- end >>
    server: https://CLUSTER_MEMBER_ADDRESS:6443
  name: local
contexts:
- context:
    cluster: local
    user: cluster-admin
  name: default
current-context: default
kind: Config
preferences: {}
users:
- name: cluster-admin
  user:
<<- with secret "{{ vault_agent_secrets['pki_client_cert_admin'] }}" "common_name=cluster-admin" "ttl=24h" >>
    client-certificate-data: << base64Encode .Data.certificate >>
    client-key-data: << base64Encode .Data.private_key >>
<<- end >>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "/home/{{ kubectl_user }}/.kube/config"
  perms                = 0600
  user                 = "{{ kubectl_user }}"
  group                = "{{ kubectl_group }}"
}

template {
  contents    = <<EOT
---
apiVersion: v1
kind: Secret
metadata:
  name: metrics-server
  namespace: kube-system
type: Opaque
data:
<<- with secret "{{ vault_agent_secrets['pki_aggregationlayer_cert_metrics_server'] }}" "common_name=metrics-server.kube-system.svc" "ttl=24h" >>
  ca.crt: << base64Encode .Data.issuing_ca >>
  tls.crt: << base64Encode .Data.certificate >>
  tls.key: << base64Encode .Data.private_key >>
<<- end >>
<<- with secret "{{ vault_agent_secrets['pki_kubelet_ca_chain'] }}" >>
  kubelet-server-ca.pem: "<< base64Encode .Data.ca_chain >>"
<<- end >>
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  labels:
    k8s-app: metrics-server
  name: v1beta1.metrics.k8s.io
spec:
<<- with secret "{{ vault_agent_secrets['pki_aggregationlayer_ca_chain'] }}" >>
  caBundle: "<< base64Encode .Data.ca_chain >>"
  group: metrics.k8s.io
  groupPriorityMinimum: 100
  service:
    name: metrics-server
    namespace: kube-system
  version: v1beta1
  versionPriority: 100
<<- end >>
EOT

  error_on_missing_key = true
  left_delimiter       = "<<"
  right_delimiter      = ">>"
  destination          = "/home/{{ kubectl_user }}/metrics-server.yaml"
  perms                = 0600
  user                 = "{{ kubectl_user }}"
  group                = "{{ kubectl_group }}"
}
