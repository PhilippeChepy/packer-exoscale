vault {
  address = "VAULT_ADDRESS"
  ca_cert = "{{ vault_tls_config_path }}/ca.pem"
}

auto_auth {
  method "approle" {
    mount_path = "{{ vault_agent_vault_auth_path }}"

    config = {
      role_id_file_path                   = "{{ vault_agent_approle_path }}/.role_id"
      secret_id_file_path                 = "{{ vault_agent_approle_path }}/.instance_id"
      remove_secret_id_file_after_reading = false
    }
  }
}

# Required for backups through the local unix socket
# Requests are forwarded to the leader through the vault-agent socket
cache {
  use_auto_auth_token = true
}

listener "unix" {
  address = "/run/vault/vault-agent.sock"
  tls_disable = true
  socket_mode = "0600"
  socket_user = "vault"
  socket_group = "vault"
}

template {
  contents    = <<EOT
{% raw %}{{- with pkiCert "{% endraw %}{{ vault_agent_secrets['pki_vault_cert'] }}{% raw %}" "common_name=CLUSTER_NAME" "alt_names=CLUSTER_NAME,CLUSTER_MEMBER_NAME,vault.CLUSTER_DOMAIN_NAME,CLUSTER_NAME.CLUSTER_DOMAIN_NAME,CLUSTER_MEMBER_NAME.CLUSTER_DOMAIN_NAME" "ip_sans=CLUSTER_NLB_ADDRESS,CLUSTER_MEMBER_ADDRESS" "ttl=24h" -}}
{{ .Cert }}{{ .CA }}{{ .Key }}
{{ .Key | writeToFile "{% endraw %}{{ vault_tls_config_path }}/server.key" "vault" "vault{% raw %}" "0400" }}
{{ .Cert | writeToFile "{% endraw %}{{ vault_tls_config_path }}/server.pem" "vault" "vault{% raw %}" "0644" }}
{{ .CA | writeToFile "{% endraw %}{{ vault_tls_config_path }}/server.pem" "vault" "vault{% raw %}" "0644" "append" }}
{{ end }}
{{ with secret "{% endraw %}{{ vault_agent_secrets['pki_root'] }}{% raw %}" }}
{{ .Data.ca_chain | writeToFile "{% endraw %}{{ vault_tls_config_path }}/ca.pem" "vault" "vault{% raw %}" "0644" }}
{{- end -}}
EOT

  destination = "{% endraw %}{{ vault_tls_config_path }}{% raw %}/.vault-cache.pem"
  command     = "sudo systemctl reload vault-server"
  perms       = 0600
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_secrets['kv_backup_exoscale_api'] }}{% raw %}"  -}}
AWS_ACCESS_KEY="{{ .Data.api_key }}"
AWS_SECRET_KEY="{{ .Data.api_secret }}"
{{ end }}
{% endraw %}
EOT
  destination = "/etc/rclone/credentials"
  perms       = 0600
}

template {
  contents    = <<EOT
{% raw %}{{- with secret "{% endraw %}{{ vault_agent_secrets['kv_backup_encryption'] }}{% raw %}"  -}}
{{ .Data.key }}
{{ end }}
{% endraw %}
EOT
  destination = "/etc/rclone/backup-public-key.pem"
  perms       = 0600
}
