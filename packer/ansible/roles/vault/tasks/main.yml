---

- name: Add Vault group
  become: true
  ansible.builtin.group:
    name: "{{ vault_group }}"
    state: present

- name: Add Vault user
  become: true
  ansible.builtin.user:
    name: "{{ vault_user }}"
    comment: "Vault user"
    group: "{{ vault_group }}"
    groups: "{{ vault_groups }}"
    shell: /bin/bash
    system: true

- name: Add vault to sudoers for service reload
  tags:
    - vault
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/sudoers.d/vault"
    line: "%{{ vault_user }} ALL= NOPASSWD: /bin/systemctl reload {{ vault_service_name }}"
    owner: "root"
    group: "root"
    create: true
    mode: 0440

# Binary installation

- name: Check Vault installation
  shell: command -v vault
  environment:
    PATH: "{{ vault_bin_path }}:{{ ansible_env.PATH }}"
  register: vault_installation
  changed_when: false
  ignore_errors: true
  check_mode: false
  tags:
    - skip_ansible_lint  # command is a shell builtin

- name: Get installed Vault version
  ansible.builtin.shell: |
    set -o pipefail
    {{ vault_installation.stdout }} -version | cut -d' ' -f2 | tr -d 'v'
  args:
    executable: /bin/bash
  when: not vault_installation is failed
  changed_when: false
  check_mode: false
  register: installed_vault_version

- name: Install OS packages and Vault
  include_tasks: _install.yml

- name: extract systemd version
  ansible.builtin.shell: |
    set -o pipefail
    systemctl --version systemd | head -n 1 | cut -d' ' -f2
  args:
    executable: /bin/bash
  changed_when: false
  check_mode: false
  register: systemd_version
  tags: skip_ansible_lint

- name: Create TLS directory
  tags:
    - vault
    - tls-server
  become: true
  ansible.builtin.file:
    dest: "{{ item }}"
    state: directory
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0755
  loop:
    - "{{ vault_tls_config_path }}"

- name: Configure Vault and service
  include_tasks: _config.yml

- name: vault-server configuration
  tags:
    - vault
  become: true
  ansible.builtin.template:
    src: "vault-server.hcl.j2"
    dest: "{{ vault_config_path }}/vault.hcl"
    force: true
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0600
  when:
    - vault_mode == 'server'

- name: vault-agent configuration
  tags:
    - vault
  become: true
  ansible.builtin.template:
    src: "vault.j2"
    dest: "/etc/default/vault"
    force: true
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0600
  when:
    - vault_mode == 'agent'

- name: Install vault-agent-init helper script
  tags:
    - vault
  become: true
  ansible.builtin.copy:
    src: "vault-agent-init"
    dest: "/usr/local/bin/vault-agent-init"
    force: true
    owner: root
    group: root
    mode: "0755"
  when:
    - vault_mode == 'agent'

- name: Insert vault source in dotfile
  tags:
    - vault
  become: true
  ansible.builtin.lineinfile:
    path: "{{ vault_home }}/{{ vault_dotfile }}"
    line: ". /etc/default/vault"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    create: true
    mode: 0600
  when:
    - not vault_dotfile_disable
